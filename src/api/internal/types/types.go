// Code generated by goctl. DO NOT EDIT.
package types

type Userinfo struct {
	Gender         int    `json:"gender"` //性别
	Age            int    `json:"age"`    //年龄
	HeadUrl        string `json:"head_url"`
	Email          string `json:"email"`
	UserName       string `json:"username"`
	Introduction   string `json:"introduction"`
	LearnNumOneDay int    `json:"learnnumoneday"`
}

type RegisterReq struct {
	UserName string `json:"username"` // 用户名
	PassWord string `json:"password"` // 用户密码，MD5加密
	Gender   int    `json:"gender"`   // 用户性别：0男，1女，2保密
	Age      int    `json:"age"`
	Email    string `json:"email"` // 用户邮箱
}

type CommonResply struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type LoginReq struct {
	UserName string `json:"username"` // 用户名
	PassWord string `json:"password"` // 用户密码，MD5加密
}

type LoginResply struct {
	CommonResply
	Data         Userinfo `json:"data"`
	AccessToken  string   `json:"accessToken"`
	AccessExpire int64    `json:"accessExpire"`
	RefreshAfter int64    `json:"refreshAfter"`
}

type Floderinfo struct {
	Id      int    `json:"id"`
	Name    string `json:"name"`
	DeckNum int    `json:"decknum"`
}

type FloderAllReq struct {
}

type FloderAllResp struct {
	Data []Floderinfo `json:"data"`
}

type FloderReq struct {
	Id int `json:"id"`
}

type FloderResp struct {
	Code    int64      `json:"code"`
	Message string     `json:"message"`
	Data    []Deckinfo `json:"data"`
}

type Deckinfo struct {
	Id      int    `json:"id"`
	Name    string `json:"name"`
	Cardnum int    `json:"cardnum"`
	Update  int    `json:"update"`
}

type FloderAddReq struct {
	Name string `json:"name"`
}

type DeckAddReq struct {
	FloderID int    `json:"floderid"`
	Name     string `json:"name"`
}

type Sectioninfo struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
}

type Knowledgeinfo struct {
	Id     int    `json:"id"`
	Font   string `json:"font"`
	Back   string `json:"back"`
	Typeof int    `json:"typeof"` // 属于哪种卡片类型，默认为0，就是正反面问题答案卡片形式
	Sectioninfo
}

type DeckAllReq struct {
	DeckId int `json:"deckid"`
}

type DeckAllResp struct {
	CommonResply
	Data map[string][]Knowledgeinfo `json:"data"`
}

type SectionAddReq struct {
	DeckId int    `json:"deckId"`
	Name   string `json:"name"`
}

type CardLearningReq struct {
	DeckId int `json:"id"` //     deckid
}

type CardLearningResp struct {
	CommonResply
	Data []Knowledgeinfo `json:"data"` //在学的所有
}

type CardToLearningReq struct {
	IdList []int `json:"idlist"` //     ldlist
}

type KnowledgeInfo struct {
	Font       string  `json:"font"`
	OriginFont string  `json:"originfont"`
	Back       string  `json:"back"`
	OnLearning bool    `json:"onlearning"`
	Typeof     int     `json:"typeof"`
	DeckId     uint    `json:"deckid"`
	Skilled    float64 `json:"skilled"`
	SectionId  int     `json:"sectionId"`
}

type KnowledgeAddReq struct {
	Font      string `json:"font"`
	Back      string `json:"back"`
	DeckId    uint   `json:"deckid"`
	SectionId int    `json:"sectionId"`
}

type KnowledgeAddResp struct {
	CommonResply
}

type KnowledgeDelReq struct {
	Id int `json:"id"`
}

type KnowledgeDelResp struct {
	CommonResply
}

type ReviewReq struct {
	KnowledgeId uint `json:"knowledgeId"`
	Op          int  `json:"op"` //操作，简单、困难、忘记之类
}

type ReviewResp struct {
	CommonResply
	Data KnowledgeInfo `json:"data"`
}

type ReviewingListResp struct {
	CommonResply
	Data []KnowledgeInfo `json:"data"`
}
